// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.DAL.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240705140724_initial-seeddata")]
    partial class initialseeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("07237204-83cb-8003-266e-6dd98bf14a16"),
                            AccessFailedCount = 0,
                            Address = "75741 Martina Manor, West Elwinberg, Peru",
                            BirthDate = new DateTime(1994, 11, 29, 13, 40, 22, 283, DateTimeKind.Local).AddTicks(3798),
                            ConcurrencyStamp = "300e3348-7f18-4cfd-9a86-8188aa9fec74",
                            Email = "monserrate.schmitt67_brown@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "5RlpDlIS",
                            PhoneNumber = "522.575.6803 x91629",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Ansley.Stehr"
                        },
                        new
                        {
                            Id = new Guid("e82072f5-6535-9e24-aa62-b66e9e9d7e6d"),
                            AccessFailedCount = 0,
                            Address = "4957 Hillard Harbor, Roweport, Marshall Islands",
                            BirthDate = new DateTime(1991, 7, 31, 20, 27, 55, 601, DateTimeKind.Local).AddTicks(5620),
                            ConcurrencyStamp = "725d9a71-0336-412f-b171-9aec170fc5c5",
                            Email = "orrin_abernathy_kuvalis77@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "xDddDJa1",
                            PhoneNumber = "776.652.5768 x53747",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Bobbie43"
                        },
                        new
                        {
                            Id = new Guid("51a458ad-4774-1bc6-5e47-028d03cdfc7c"),
                            AccessFailedCount = 0,
                            Address = "9017 Evie Estate, East Melvin, British Indian Ocean Territory (Chagos Archipelago)",
                            BirthDate = new DateTime(1986, 4, 24, 1, 22, 27, 294, DateTimeKind.Local).AddTicks(340),
                            ConcurrencyStamp = "8c628f8a-9c78-41b4-bdf2-7bcc71e1b78e",
                            Email = "mattie48_gusikowski11@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "vraZSpy_",
                            PhoneNumber = "1-909-918-9807 x6498",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Jacynthe.Goldner82"
                        },
                        new
                        {
                            Id = new Guid("3c96ecb8-a968-875b-9f95-f25d12292bf6"),
                            AccessFailedCount = 0,
                            Address = "873 Bergstrom Ranch, Lake Rae, Heard Island and McDonald Islands",
                            BirthDate = new DateTime(2002, 4, 16, 17, 7, 12, 324, DateTimeKind.Local).AddTicks(102),
                            ConcurrencyStamp = "4fe25c47-2f33-48ba-a7f8-20a4be3b0f5b",
                            Email = "christa_lesch8753@gmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "2gT8_14e",
                            PhoneNumber = "(516) 434-6712 x7817",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Fredrick_Gottlieb24"
                        },
                        new
                        {
                            Id = new Guid("2300e3dd-ac90-3fab-4745-10d111cab204"),
                            AccessFailedCount = 0,
                            Address = "9633 Stanton Creek, East Rozella, Monaco",
                            BirthDate = new DateTime(1977, 9, 17, 5, 12, 23, 645, DateTimeKind.Local).AddTicks(1587),
                            ConcurrencyStamp = "a147db0c-e60f-4873-8e42-c28b61ee2778",
                            Email = "georgette.lehner2.turner@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "WxNlxDXf",
                            PhoneNumber = "(270) 409-8076 x27120",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Tremaine_Rice"
                        },
                        new
                        {
                            Id = new Guid("07359ec6-db15-a7df-51bf-d35292e0d375"),
                            AccessFailedCount = 0,
                            Address = "9948 Henderson Mission, Borerview, Afghanistan",
                            BirthDate = new DateTime(1989, 5, 1, 3, 25, 12, 834, DateTimeKind.Local).AddTicks(5073),
                            ConcurrencyStamp = "182d2c9e-4b22-4d73-b0b8-2321718b168b",
                            Email = "molly_jast6034@gmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "Ce0dt5ag",
                            PhoneNumber = "327.269.8898 x13182",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Jacynthe.Thompson79"
                        },
                        new
                        {
                            Id = new Guid("4640ea55-e84d-122f-efd4-f1f334ca1bdf"),
                            AccessFailedCount = 0,
                            Address = "1466 Tromp Causeway, South Adan, Samoa",
                            BirthDate = new DateTime(1992, 8, 13, 7, 58, 53, 930, DateTimeKind.Local).AddTicks(8847),
                            ConcurrencyStamp = "845b93ce-c58c-42c0-8a78-83f12b22bade",
                            Email = "rick_rice98_spencer@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "DmiJ6l71",
                            PhoneNumber = "(881) 758-3926 x37101",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Julia.Barrows3"
                        },
                        new
                        {
                            Id = new Guid("c330809c-e1f8-ac1e-5f89-250c26773272"),
                            AccessFailedCount = 0,
                            Address = "61365 Rutherford Tunnel, Whitneyshire, Barbados",
                            BirthDate = new DateTime(1997, 4, 3, 7, 22, 5, 675, DateTimeKind.Local).AddTicks(8464),
                            ConcurrencyStamp = "318cbc91-9fe6-4329-8f45-74fb971549ab",
                            Email = "lurline_beer87.robel4@gmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "SgtQdbIz",
                            PhoneNumber = "720-611-1165 x0008",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Justice_Kling69"
                        },
                        new
                        {
                            Id = new Guid("4b8e6c00-a478-842c-bc81-1d25114a0505"),
                            AccessFailedCount = 0,
                            Address = "0374 Mills Skyway, Bruenberg, Bahamas",
                            BirthDate = new DateTime(2003, 10, 14, 3, 13, 20, 843, DateTimeKind.Local).AddTicks(1851),
                            ConcurrencyStamp = "5dd83f1e-7b84-4935-a290-972431ac69ef",
                            Email = "jazmin1258@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "xaj7yILe",
                            PhoneNumber = "719.920.7158",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Raul39"
                        },
                        new
                        {
                            Id = new Guid("e0810408-df9e-aeff-1a4e-bb7a297a305d"),
                            AccessFailedCount = 0,
                            Address = "073 Caden Neck, Hillsmouth, Italy",
                            BirthDate = new DateTime(2001, 2, 10, 6, 4, 48, 132, DateTimeKind.Local).AddTicks(6494),
                            ConcurrencyStamp = "3b8ff311-6bad-4b84-9711-2912e9549261",
                            Email = "june122@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "8_dJjHKS",
                            PhoneNumber = "362.760.1033 x16788",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Braxton.Mayert"
                        },
                        new
                        {
                            Id = new Guid("ac3e9e8d-07b8-2234-50bb-136c027c4688"),
                            AccessFailedCount = 0,
                            Address = "271 Francesca Crossroad, New Rosalynburgh, Malaysia",
                            BirthDate = new DateTime(1994, 8, 26, 1, 58, 37, 254, DateTimeKind.Local).AddTicks(7752),
                            ConcurrencyStamp = "8db7a83a-e797-4687-9514-ab067339c5ef",
                            Email = "vada33.nienow@gmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "akYSqsIh",
                            PhoneNumber = "1-727-979-7831",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Naomie31"
                        },
                        new
                        {
                            Id = new Guid("852cb390-d0b6-7b5e-d5e1-0e0330a512b0"),
                            AccessFailedCount = 0,
                            Address = "3650 Ally Valley, Lake Alverta, Denmark",
                            BirthDate = new DateTime(1977, 11, 28, 19, 22, 45, 492, DateTimeKind.Local).AddTicks(1874),
                            ConcurrencyStamp = "85febbd2-f4d8-43fd-b607-3f8377e382dd",
                            Email = "dejuan_oconner.romaguera@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "axCyivHz",
                            PhoneNumber = "641-386-8352 x8032",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Amir_Leuschke"
                        },
                        new
                        {
                            Id = new Guid("01d61052-8e67-75b9-1e76-772d32943196"),
                            AccessFailedCount = 0,
                            Address = "4093 Mekhi Trail, Port Mikayla, India",
                            BirthDate = new DateTime(1985, 5, 29, 16, 34, 36, 303, DateTimeKind.Local).AddTicks(7782),
                            ConcurrencyStamp = "da6a2a23-a677-4761-bd74-f2833d9f612e",
                            Email = "lucie5195@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "HrCdqZMV",
                            PhoneNumber = "360.467.0887 x966",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Ezra_Hagenes29"
                        },
                        new
                        {
                            Id = new Guid("47edc48e-324e-f7f7-7b76-1128a6c95f73"),
                            AccessFailedCount = 0,
                            Address = "58393 Gislason Drive, Loufurt, Dominica",
                            BirthDate = new DateTime(1982, 12, 23, 5, 43, 37, 349, DateTimeKind.Local).AddTicks(9945),
                            ConcurrencyStamp = "c8a9c8b6-e211-4929-82c1-2354a8c6662c",
                            Email = "mariano_nienow9579@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "c3BfTGDh",
                            PhoneNumber = "(994) 272-8268 x279",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Toney_Towne78"
                        },
                        new
                        {
                            Id = new Guid("266a0c0d-9bd3-6bea-78a6-f93236514d4a"),
                            AccessFailedCount = 0,
                            Address = "62610 Ebert Prairie, Leannhaven, Singapore",
                            BirthDate = new DateTime(1993, 1, 31, 18, 35, 4, 567, DateTimeKind.Local).AddTicks(4802),
                            ConcurrencyStamp = "eb0866ce-e834-4b3a-8505-9b3f6968c812",
                            Email = "kendall.jones.hessel85@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "SHQcOzan",
                            PhoneNumber = "(342) 834-9200 x71232",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Lupe51"
                        },
                        new
                        {
                            Id = new Guid("0590e6f2-4d8b-69f8-1d92-1c3e02234bcf"),
                            AccessFailedCount = 0,
                            Address = "9973 Corwin Turnpike, East Ruthieshire, Nauru",
                            BirthDate = new DateTime(1993, 4, 23, 13, 9, 18, 70, DateTimeKind.Local).AddTicks(5110),
                            ConcurrencyStamp = "75c77bf5-4fb1-4096-9e5f-73004f468312",
                            Email = "annetta.borer.abshire@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "JJ2GV6bE",
                            PhoneNumber = "1-870-761-7584 x8690",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Myles.Bernier12"
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Chocolates",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8473),
                            CreatedIpAddress = 2,
                            Description = "Perspiciatis enim voluptatibus est in.",
                            IsActive = true,
                            MasterId = new Guid("c8fa42ad-d88a-4592-9bcd-6ecc0b38d234"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8757),
                            CreatedIpAddress = 2,
                            Description = "Sunt blanditiis enim ut adipisci enim.",
                            IsActive = true,
                            MasterId = new Guid("c409ac6b-f394-4290-b5ac-aaaea90e861b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Teas",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8791),
                            CreatedIpAddress = 2,
                            Description = "Laboriosam harum voluptas qui ad quia sunt et quo.",
                            IsActive = true,
                            MasterId = new Guid("0686e84c-4ae5-4cd3-bbcb-b30aeab5ac9f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8824),
                            CreatedIpAddress = 2,
                            Description = "Voluptatum ducimus ducimus qui nobis quaerat consequatur consequatur.",
                            IsActive = true,
                            MasterId = new Guid("89251b88-b54d-4998-9bec-6ee4116d7733"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8848),
                            CreatedIpAddress = 2,
                            Description = "Voluptates itaque quidem incidunt officia.",
                            IsActive = true,
                            MasterId = new Guid("ad0bebae-6b3d-4ad1-b6d7-3909142afcf5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Chocolates",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8874),
                            CreatedIpAddress = 2,
                            Description = "Pariatur dignissimos sint velit libero.",
                            IsActive = true,
                            MasterId = new Guid("726c143c-dc55-4ec1-8c5f-4b21fd6ca556"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8896),
                            CreatedIpAddress = 2,
                            Description = "Exercitationem ducimus enim nam et placeat rerum dolor nisi.",
                            IsActive = true,
                            MasterId = new Guid("2870b168-41a9-4350-afe0-2495b2888f43"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8921),
                            CreatedIpAddress = 2,
                            Description = "Eligendi molestiae in neque dolorem commodi enim dolor nemo ab.",
                            IsActive = true,
                            MasterId = new Guid("d67750b6-91c1-4906-a240-6fa58ed9d482"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8963),
                            CreatedIpAddress = 2,
                            Description = "İtaque nam at expedita nam est facilis eos.",
                            IsActive = true,
                            MasterId = new Guid("790dfeae-18f7-4e69-8e22-afe99c2f79d5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Salads",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8986),
                            CreatedIpAddress = 2,
                            Description = "Commodi neque impedit.",
                            IsActive = true,
                            MasterId = new Guid("85acc24a-6abd-4c3a-a4f3-297c9cd38006"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(8997),
                            CreatedIpAddress = 2,
                            Description = "Omnis nesciunt molestias eaque veritatis.",
                            IsActive = true,
                            MasterId = new Guid("0e1802f7-162f-45e1-8326-fcb1f4e146ab"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(9012),
                            CreatedIpAddress = 2,
                            Description = "Ea magni vitae.",
                            IsActive = true,
                            MasterId = new Guid("62563b3a-809c-4f88-9022-6465479e1f2d"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryName = "Coffees",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(9026),
                            CreatedIpAddress = 2,
                            Description = "İn pariatur qui ut blanditiis quis qui.",
                            IsActive = true,
                            MasterId = new Guid("b9251af1-9ea4-4c84-923e-bbd2cac1593d"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryName = "Chocolates",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(9048),
                            CreatedIpAddress = 2,
                            Description = "Deserunt architecto est sed itaque ab.",
                            IsActive = true,
                            MasterId = new Guid("f5566bba-d6d5-4292-ab0a-27f9cf06c00b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryName = "Fruit Juices",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 408, DateTimeKind.Local).AddTicks(9071),
                            CreatedIpAddress = 2,
                            Description = "Voluptatem tenetur placeat.",
                            IsActive = true,
                            MasterId = new Guid("148d7926-1974-4a53-ac6f-26cdff427ecd"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<short>("Stock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1453),
                            CreatedIpAddress = 2,
                            Discount = 0.23000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=430",
                            IsActive = true,
                            MasterId = new Guid("4a62a451-f172-4ed9-a97a-bb8aeb7da687"),
                            Price = 836.55m,
                            ProductName = "Flat White",
                            Status = 0,
                            Stock = (short)32,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 6,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1671),
                            CreatedIpAddress = 2,
                            Discount = 0.040000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=55",
                            IsActive = true,
                            MasterId = new Guid("cad0f091-0423-4a5d-836b-323431912464"),
                            Price = 808.72m,
                            ProductName = "Éclair",
                            Status = 0,
                            Stock = (short)58,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1685),
                            CreatedIpAddress = 2,
                            Discount = 0.27000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=995",
                            IsActive = true,
                            MasterId = new Guid("97c1332f-8173-447a-be16-0a9b8ea1bc3d"),
                            Price = 602.88m,
                            ProductName = "Waffle",
                            Status = 0,
                            Stock = (short)85,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 4,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1695),
                            CreatedIpAddress = 2,
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=124",
                            IsActive = true,
                            MasterId = new Guid("5ab62479-28e1-4a52-b251-aeb8a3f925d8"),
                            Price = 600.71m,
                            ProductName = "Waffle",
                            Status = 0,
                            Stock = (short)67,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 7,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1706),
                            CreatedIpAddress = 2,
                            Discount = 0.029999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=678",
                            IsActive = true,
                            MasterId = new Guid("924f6d77-cf60-4571-8e7e-84bb65e7dcf8"),
                            Price = 408.06m,
                            ProductName = "Pie",
                            Status = 0,
                            Stock = (short)41,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1717),
                            CreatedIpAddress = 2,
                            Discount = 0.45000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=966",
                            IsActive = true,
                            MasterId = new Guid("6f49aae1-21c1-4137-b3b0-aafd8288fa1f"),
                            Price = 411.87m,
                            ProductName = "Éclair",
                            Status = 0,
                            Stock = (short)56,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1727),
                            CreatedIpAddress = 2,
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=180",
                            IsActive = true,
                            MasterId = new Guid("50377e54-f2be-4256-b5e9-aec2ea3972a8"),
                            Price = 789.61m,
                            ProductName = "Mocha",
                            Status = 0,
                            Stock = (short)43,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 10,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1736),
                            CreatedIpAddress = 2,
                            Discount = 0.22,
                            ImagePath = "https://picsum.photos/640/480/?image=620",
                            IsActive = true,
                            MasterId = new Guid("8bd355c3-0a0a-4a3b-b14f-a6d619721dc1"),
                            Price = 61.82m,
                            ProductName = "Coffee Martini",
                            Status = 0,
                            Stock = (short)50,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 10,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1746),
                            CreatedIpAddress = 2,
                            Discount = 0.40000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=927",
                            IsActive = true,
                            MasterId = new Guid("1066ffc0-ad60-47ce-a23b-785aa364218d"),
                            Price = 167.84m,
                            ProductName = "Cold Brew",
                            Status = 0,
                            Stock = (short)12,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 4,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1759),
                            CreatedIpAddress = 2,
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=286",
                            IsActive = true,
                            MasterId = new Guid("bb4cf628-bf91-461e-a0c9-6e44efe18a2e"),
                            Price = 686.38m,
                            ProductName = "Cupcake",
                            Status = 0,
                            Stock = (short)25,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 4,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1769),
                            CreatedIpAddress = 2,
                            Discount = 0.46000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=1051",
                            IsActive = true,
                            MasterId = new Guid("aa6713d0-162d-4dc4-87dd-b7736832b73a"),
                            Price = 2.03m,
                            ProductName = "Profiterole",
                            Status = 0,
                            Stock = (short)11,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 6,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1784),
                            CreatedIpAddress = 2,
                            Discount = 0.089999999999999997,
                            ImagePath = "https://picsum.photos/640/480/?image=1043",
                            IsActive = true,
                            MasterId = new Guid("9e329c3f-a8fb-49c0-bbb8-02e417ef1b9f"),
                            Price = 874.00m,
                            ProductName = "Pudding",
                            Status = 0,
                            Stock = (short)47,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1794),
                            CreatedIpAddress = 2,
                            Discount = 0.32000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=681",
                            IsActive = true,
                            MasterId = new Guid("a5904ec0-2a91-4726-9538-41f7e98b7231"),
                            Price = 396.59m,
                            ProductName = "Coffee Soda",
                            Status = 0,
                            Stock = (short)59,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 10,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1802),
                            CreatedIpAddress = 2,
                            Discount = 0.20000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=437",
                            IsActive = true,
                            MasterId = new Guid("1270d0d4-3473-4e4e-9ea0-613aff4b317a"),
                            Price = 611.26m,
                            ProductName = "Pie",
                            Status = 0,
                            Stock = (short)52,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1811),
                            CreatedIpAddress = 2,
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=950",
                            IsActive = true,
                            MasterId = new Guid("f589dfe0-3f83-4d74-8cc6-e8054da4a2c7"),
                            Price = 904.67m,
                            ProductName = "Iced Coffee",
                            Status = 0,
                            Stock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1820),
                            CreatedIpAddress = 2,
                            Discount = 0.23000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=244",
                            IsActive = true,
                            MasterId = new Guid("7ab7069b-565a-4ec9-8830-ce9b72ccf1e6"),
                            Price = 577.80m,
                            ProductName = "Ice Cream",
                            Status = 0,
                            Stock = (short)10,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 9,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1829),
                            CreatedIpAddress = 2,
                            Discount = 0.45000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=288",
                            IsActive = true,
                            MasterId = new Guid("2d7a7a34-b4b7-41d3-b5e3-259d38f8b3ed"),
                            Price = 377.41m,
                            ProductName = "Iced Coffee",
                            Status = 0,
                            Stock = (short)38,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 4,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1842),
                            CreatedIpAddress = 2,
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=381",
                            IsActive = true,
                            MasterId = new Guid("036fdf3f-1187-44cf-9f9b-e5f3f6bb5a27"),
                            Price = 842.76m,
                            ProductName = "Iced Coffee",
                            Status = 0,
                            Stock = (short)47,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1851),
                            CreatedIpAddress = 2,
                            Discount = 0.38,
                            ImagePath = "https://picsum.photos/640/480/?image=485",
                            IsActive = true,
                            MasterId = new Guid("67f46ed6-acb2-4baa-8769-1f6a0841e7bf"),
                            Price = 163.41m,
                            ProductName = "Tiramisu",
                            Status = 0,
                            Stock = (short)69,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 8,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 5, 17, 7, 24, 410, DateTimeKind.Local).AddTicks(1861),
                            CreatedIpAddress = 2,
                            Discount = 0.39000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=825",
                            IsActive = true,
                            MasterId = new Guid("5b11db43-7a38-4954-9b89-97e1ba2573f2"),
                            Price = 281.47m,
                            ProductName = "Pie",
                            Status = 0,
                            Stock = (short)50,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
