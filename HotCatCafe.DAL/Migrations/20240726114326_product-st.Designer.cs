// <auto-generated />
using System;
using HotCatCafe.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotCatCafe.DAL.Migrations
{
    [DbContext(typeof(HotCatCafeContext))]
    [Migration("20240726114326_product-st")]
    partial class productst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c7f94c0-5269-da7d-8b15-25aed81b4828"),
                            AccessFailedCount = 0,
                            Address = "0231 Gusikowski Islands, Volkmanstad, Fiji",
                            BirthDate = new DateTime(1989, 7, 28, 20, 10, 8, 93, DateTimeKind.Local).AddTicks(9169),
                            ConcurrencyStamp = "1a41d752-39d4-4dc7-880e-cc5eba90206f",
                            Email = "benton.hegmann8.connelly@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "qj35wSfC",
                            PhoneNumber = "1-576-382-0259 x1836",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Sasha60"
                        },
                        new
                        {
                            Id = new Guid("bbc727c4-e3f6-ea08-762e-4a664c0240b4"),
                            AccessFailedCount = 0,
                            Address = "36694 Romaguera Union, Taureanstad, Chile",
                            BirthDate = new DateTime(1991, 7, 10, 3, 28, 4, 995, DateTimeKind.Local).AddTicks(1909),
                            ConcurrencyStamp = "c0c58c4e-ab35-47e4-8511-658aa926cd1b",
                            Email = "oswaldo_borer18.macgyver5@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "KX0558ex",
                            PhoneNumber = "451-998-6675",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Karl_Nader"
                        },
                        new
                        {
                            Id = new Guid("0fe0f671-e3fb-37f2-5d0c-55ad7d39500a"),
                            AccessFailedCount = 0,
                            Address = "226 Monte Hill, Port Stephen, Swaziland",
                            BirthDate = new DateTime(2005, 9, 29, 22, 2, 18, 525, DateTimeKind.Local).AddTicks(8746),
                            ConcurrencyStamp = "569be9e3-5169-4667-86b7-32ad7782ddec",
                            Email = "keira.fisher55_bradtke19@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "sCdu92KE",
                            PhoneNumber = "(363) 824-0815 x2036",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Magdalen.Olson"
                        },
                        new
                        {
                            Id = new Guid("df997d26-fd9b-9ed9-194c-d8c062494b18"),
                            AccessFailedCount = 0,
                            Address = "12548 Friesen Fork, Stuartville, Jamaica",
                            BirthDate = new DateTime(1995, 6, 2, 20, 36, 38, 269, DateTimeKind.Local).AddTicks(6639),
                            ConcurrencyStamp = "36152f94-ba8d-45e9-8014-285115fc83b2",
                            Email = "demetris9297@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "SmY8g3oh",
                            PhoneNumber = "1-622-760-8298",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Clint63"
                        },
                        new
                        {
                            Id = new Guid("188b9678-f1f2-e805-3723-7a6379846bd5"),
                            AccessFailedCount = 0,
                            Address = "797 Carlotta Ville, Port Gudrun, Burkina Faso",
                            BirthDate = new DateTime(1977, 4, 20, 2, 7, 41, 819, DateTimeKind.Local).AddTicks(3362),
                            ConcurrencyStamp = "c22fc1fb-7614-4416-a907-683633cb250e",
                            Email = "eldridge.sawayn3943@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "WUFbGg_w",
                            PhoneNumber = "442.314.0169",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Itzel84"
                        },
                        new
                        {
                            Id = new Guid("8542967a-fe58-9bdb-da0d-ce62b5bb6b9e"),
                            AccessFailedCount = 0,
                            Address = "038 Antonio Grove, Watersborough, Saint Vincent and the Grenadines",
                            BirthDate = new DateTime(1990, 11, 14, 0, 24, 21, 734, DateTimeKind.Local).AddTicks(64),
                            ConcurrencyStamp = "5f6c553b-a338-46ed-98e5-3253bdbc7024",
                            Email = "seamus.cassin7270@gmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "eNJpH81o",
                            PhoneNumber = "526-208-9622 x53494",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Monica_Smitham97"
                        },
                        new
                        {
                            Id = new Guid("99673ac9-226b-adb3-eae0-00aa70fe1d52"),
                            AccessFailedCount = 0,
                            Address = "459 Justen Shoals, East Harrison, Italy",
                            BirthDate = new DateTime(1987, 7, 22, 15, 0, 32, 942, DateTimeKind.Local).AddTicks(173),
                            ConcurrencyStamp = "6e285fa2-6167-4409-b06b-17cd6d93f36d",
                            Email = "lew.deckow13@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "0Eh8pw4w",
                            PhoneNumber = "1-783-936-8645 x5557",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Mellie48"
                        },
                        new
                        {
                            Id = new Guid("8d420207-2656-00f5-4685-b1a8497678a1"),
                            AccessFailedCount = 0,
                            Address = "81450 Ratke Island, Lake Devin, Senegal",
                            BirthDate = new DateTime(1977, 9, 9, 19, 42, 39, 209, DateTimeKind.Local).AddTicks(404),
                            ConcurrencyStamp = "a45136e7-9ccb-482a-b1cd-eb321fb6eeab",
                            Email = "cleta.hansen2.schumm@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "C2oGbRt9",
                            PhoneNumber = "480.855.9266 x6371",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Wilfredo.Brekke"
                        },
                        new
                        {
                            Id = new Guid("32952328-a625-0058-c459-efa52e7579fc"),
                            AccessFailedCount = 0,
                            Address = "66185 Quitzon Islands, Boscofort, Kyrgyz Republic",
                            BirthDate = new DateTime(1989, 11, 26, 10, 7, 18, 649, DateTimeKind.Local).AddTicks(7629),
                            ConcurrencyStamp = "8a078b45-d7b4-4dc3-8589-e87985384682",
                            Email = "orion_rowe.cremin@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "UbAspWCD",
                            PhoneNumber = "204.515.4529 x96604",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Randy.Bechtelar4"
                        },
                        new
                        {
                            Id = new Guid("d337cbe5-ee4b-ab0e-eaf8-fa16ff7d98f8"),
                            AccessFailedCount = 0,
                            Address = "479 Lowe Stream, Devantechester, Serbia",
                            BirthDate = new DateTime(2006, 4, 12, 15, 34, 28, 881, DateTimeKind.Local).AddTicks(1710),
                            ConcurrencyStamp = "96b55799-3ce5-4f99-89be-f85d47ff70f8",
                            Email = "amos1435@gmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "kzsoQahs",
                            PhoneNumber = "928.259.4112 x84584",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Micah14"
                        },
                        new
                        {
                            Id = new Guid("819e64b4-6891-08bd-4780-ca13eef3f19d"),
                            AccessFailedCount = 0,
                            Address = "3428 Thiel Lights, Port Ebonyport, Reunion",
                            BirthDate = new DateTime(1980, 1, 15, 6, 15, 38, 477, DateTimeKind.Local).AddTicks(2743),
                            ConcurrencyStamp = "39419cf5-f3eb-440d-9d31-e20c1efb69e5",
                            Email = "lenora_legros.emard@gmail.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "Z3GxzGQd",
                            PhoneNumber = "(641) 465-6613 x3068",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Sierra.Trantow"
                        },
                        new
                        {
                            Id = new Guid("65fe9d12-046c-8c7d-81ab-98f5fef85920"),
                            AccessFailedCount = 0,
                            Address = "60613 Auer Extension, Maxieview, Vietnam",
                            BirthDate = new DateTime(2003, 5, 25, 4, 24, 2, 675, DateTimeKind.Local).AddTicks(5087),
                            ConcurrencyStamp = "a8b2afc1-f148-44f4-bd87-53d2f486754a",
                            Email = "ferne_feeney10_pouros34@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "g3y49Zt1",
                            PhoneNumber = "1-505-346-0520 x60065",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Reynold88"
                        },
                        new
                        {
                            Id = new Guid("a861cd8c-6f4d-0271-90e0-f4d3630f4638"),
                            AccessFailedCount = 0,
                            Address = "176 McCullough Shore, New Rupert, Kiribati",
                            BirthDate = new DateTime(1980, 12, 18, 0, 52, 0, 682, DateTimeKind.Local).AddTicks(6678),
                            ConcurrencyStamp = "21061545-678a-42ba-a4d7-b70d3928b030",
                            Email = "linnie0.murray31@gmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "pB0DBwqI",
                            PhoneNumber = "(412) 771-9724 x03736",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Alisha47"
                        },
                        new
                        {
                            Id = new Guid("0d3b6889-fb92-6c61-75f2-6cfca1638992"),
                            AccessFailedCount = 0,
                            Address = "04528 Torp Lodge, Port Lilla, Falkland Islands (Malvinas)",
                            BirthDate = new DateTime(2001, 2, 18, 20, 29, 8, 911, DateTimeKind.Local).AddTicks(6626),
                            ConcurrencyStamp = "42bcbeda-d1ef-421b-b6c1-1fd7cd5c88d3",
                            Email = "geovany54_koss@hotmail.com",
                            EmailConfirmed = false,
                            Gender = 0,
                            LockoutEnabled = false,
                            PasswordHash = "6gM2eWXg",
                            PhoneNumber = "750.642.2776 x88633",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Shea.Murazik"
                        },
                        new
                        {
                            Id = new Guid("1edc633a-eb58-0460-93f2-469721327248"),
                            AccessFailedCount = 0,
                            Address = "23898 Claudine Highway, Keeblerville, Anguilla",
                            BirthDate = new DateTime(1984, 12, 11, 10, 35, 7, 747, DateTimeKind.Local).AddTicks(7179),
                            ConcurrencyStamp = "2227235c-7732-4dc3-adab-1f43b90931fc",
                            Email = "ramiro36.russel27@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 2,
                            LockoutEnabled = false,
                            PasswordHash = "dybHvRbK",
                            PhoneNumber = "(659) 333-8111 x37632",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Lauriane79"
                        },
                        new
                        {
                            Id = new Guid("b1669005-104d-7088-efb1-9cd4848c0d2d"),
                            AccessFailedCount = 0,
                            Address = "598 Eloise Coves, Crystalfort, Denmark",
                            BirthDate = new DateTime(1982, 9, 12, 16, 51, 15, 879, DateTimeKind.Local).AddTicks(6247),
                            ConcurrencyStamp = "7532cc6f-272b-423f-a33d-fda976067217",
                            Email = "aron.stoltenberg.shields11@yahoo.com",
                            EmailConfirmed = false,
                            Gender = 1,
                            LockoutEnabled = false,
                            PasswordHash = "_dbHQ1Xm",
                            PhoneNumber = "1-931-297-8016 x2654",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Carolyn_Wuckert"
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Ice Creams",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(3955),
                            CreatedIpAddress = 2,
                            Description = "Soluta magni expedita nisi asperiores voluptas ratione dolorem tempora possimus.",
                            IsActive = true,
                            MasterId = new Guid("d65ca312-a177-40a0-944d-b10c7efdb6f0"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Chocolates",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4261),
                            CreatedIpAddress = 2,
                            Description = "Qui occaecati laudantium praesentium rerum magnam.",
                            IsActive = true,
                            MasterId = new Guid("79b93f8c-a474-4bc6-a9c6-ce835142067a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Coffees",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4321),
                            CreatedIpAddress = 2,
                            Description = "Officia ducimus maxime enim molestiae odit quia eos dolorem.",
                            IsActive = true,
                            MasterId = new Guid("abdd7b2a-cce7-4fd1-9c1c-b0b0c6d61251"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4357),
                            CreatedIpAddress = 2,
                            Description = "Perspiciatis eligendi eius hic unde consectetur et consequatur nobis hic.",
                            IsActive = true,
                            MasterId = new Guid("2d2ad7c4-6275-4902-950b-5918635b947a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "Coffees",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4394),
                            CreatedIpAddress = 2,
                            Description = "Modi minus quia recusandae eaque beatae.",
                            IsActive = true,
                            MasterId = new Guid("3c1f83a3-c9fb-442a-89bc-0591fdaef92f"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4425),
                            CreatedIpAddress = 2,
                            Description = "Asperiores totam autem sit numquam sequi tempora modi.",
                            IsActive = true,
                            MasterId = new Guid("cbd14d20-746c-4800-9fad-d93ac58a7db5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryName = "Salads",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4454),
                            CreatedIpAddress = 2,
                            Description = "İd quaerat quis dicta quasi et est et.",
                            IsActive = true,
                            MasterId = new Guid("c07305df-af21-440c-9282-b352d0e0b14a"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryName = "Chocolates",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4484),
                            CreatedIpAddress = 2,
                            Description = "Quisquam aut sit dolor voluptatibus.",
                            IsActive = true,
                            MasterId = new Guid("92e15de4-0a52-4ca5-9b64-cbe0466f2aec"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4515),
                            CreatedIpAddress = 2,
                            Description = "Eos molestiae et saepe reiciendis totam.",
                            IsActive = true,
                            MasterId = new Guid("b35ca0d1-bee7-4394-8f37-999c8d22964b"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryName = "Salads",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4557),
                            CreatedIpAddress = 2,
                            Description = "Voluptas quis eos quidem.",
                            IsActive = true,
                            MasterId = new Guid("d1e2e5f4-cd47-41a8-b5d5-41d1ad08a936"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryName = "Fruit Juices",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4574),
                            CreatedIpAddress = 2,
                            Description = "Quia quis dolores qui velit culpa consequatur ducimus fugiat.",
                            IsActive = true,
                            MasterId = new Guid("82a33134-6602-4217-a081-6dd42b5355c8"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4601),
                            CreatedIpAddress = 2,
                            Description = "Quod amet quam nobis nemo.",
                            IsActive = true,
                            MasterId = new Guid("05e2a536-adf7-4d63-86d6-7ea59704b3c8"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryName = "Cakes",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4618),
                            CreatedIpAddress = 2,
                            Description = "Dignissimos qui quibusdam dolore quibusdam.",
                            IsActive = true,
                            MasterId = new Guid("9bdfb603-afec-485e-bbe5-70d0cb7fd9a5"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryName = "Snacks",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4636),
                            CreatedIpAddress = 2,
                            Description = "Unde quibusdam ab ab placeat.",
                            IsActive = true,
                            MasterId = new Guid("981e81b3-323f-40c3-8832-b15f73f32fc2"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryName = "Coffees",
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 943, DateTimeKind.Local).AddTicks(4653),
                            CreatedIpAddress = 2,
                            Description = "Vero quas suscipit.",
                            IsActive = true,
                            MasterId = new Guid("f3f945b4-4716-4827-8d0c-98652e390aeb"),
                            Status = 0,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Discount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MinimumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("OrderDate")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DiscountID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 947, DateTimeKind.Local).AddTicks(6024),
                            CreatedIpAddress = 2,
                            IsActive = true,
                            MasterId = new Guid("fc9b5ed4-f1fc-4e6b-b87d-c8a91ae77628"),
                            OrderDate = new DateTime(2024, 7, 26, 14, 43, 25, 947, DateTimeKind.Local).AddTicks(6072),
                            Status = 0,
                            TotalAmount = 100.00m,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<int>("DataSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Discontinued")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscontinued")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<short>("Stock")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1594),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.050000000000000003,
                            ImagePath = "https://picsum.photos/640/480/?image=489",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("c4d28997-2dc6-4961-ac05-5ed904d9e156"),
                            Price = 468.99m,
                            ProductName = "Coffee Milkshake",
                            Status = 0,
                            Stock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 9,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1835),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.13,
                            ImagePath = "https://picsum.photos/640/480/?image=468",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("5e81041a-81ce-4f00-8c9c-dd436eabe2ea"),
                            Price = 556.23m,
                            ProductName = "Pudding",
                            Status = 0,
                            Stock = (short)2,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 7,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1847),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.41999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=413",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("212f4853-8816-4086-9170-fa1164bc5138"),
                            Price = 985.68m,
                            ProductName = "Brownie",
                            Status = 0,
                            Stock = (short)94,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1879),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.22,
                            ImagePath = "https://picsum.photos/640/480/?image=857",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("542b0a66-cdb5-425c-9684-8b489bcbed38"),
                            Price = 752.75m,
                            ProductName = "Muffin",
                            Status = 0,
                            Stock = (short)6,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 5,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1888),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.17000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=672",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("3cf62775-733f-4bf9-b94e-ccbf81b8ade4"),
                            Price = 231.57m,
                            ProductName = "Coffee Milkshake",
                            Status = 0,
                            Stock = (short)98,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 6,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1899),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.33000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=472",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("5b05f86a-adcb-4c4a-9d0a-589c5fa6ef32"),
                            Price = 112.60m,
                            ProductName = "Affogato",
                            Status = 0,
                            Stock = (short)14,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 7,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1908),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.070000000000000007,
                            ImagePath = "https://picsum.photos/640/480/?image=678",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("ee5d1e1e-8ccf-4272-8410-4c096429fe36"),
                            Price = 108.40m,
                            ProductName = "Macaron",
                            Status = 0,
                            Stock = (short)35,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 8,
                            CategoryId = 1,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1918),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.080000000000000002,
                            ImagePath = "https://picsum.photos/640/480/?image=283",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("55f983b0-2a23-4c82-93b7-c27ad1197eba"),
                            Price = 23.99m,
                            ProductName = "Latte",
                            Status = 0,
                            Stock = (short)98,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 9,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1927),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.23999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=545",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("75eca608-bea8-4abd-87bf-566d81a94388"),
                            Price = 403.34m,
                            ProductName = "Cookie",
                            Status = 0,
                            Stock = (short)87,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 10,
                            CategoryId = 7,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1939),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.29999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=245",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("b74b14e0-f632-4835-8d1f-4928632eac8a"),
                            Price = 569.61m,
                            ProductName = "Coffee Milkshake",
                            Status = 0,
                            Stock = (short)33,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 11,
                            CategoryId = 6,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1948),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.25,
                            ImagePath = "https://picsum.photos/640/480/?image=922",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("b208cd22-6b5f-4b50-b6d3-34b89b13e4b9"),
                            Price = 300.24m,
                            ProductName = "Cupcake",
                            Status = 0,
                            Stock = (short)38,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 12,
                            CategoryId = 5,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1957),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.46999999999999997,
                            ImagePath = "https://picsum.photos/640/480/?image=578",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("db69c51a-e1ab-4ac4-9315-89c4e49b39f8"),
                            Price = 657.14m,
                            ProductName = "Trifle",
                            Status = 0,
                            Stock = (short)11,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 13,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1965),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.28999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=350",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("497d89a8-71f8-4621-a184-042bdf805360"),
                            Price = 740.56m,
                            ProductName = "Espresso",
                            Status = 0,
                            Stock = (short)18,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 14,
                            CategoryId = 5,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1974),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.02,
                            ImagePath = "https://picsum.photos/640/480/?image=546",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("1f0fdc03-e975-482a-b774-0a91a44fe053"),
                            Price = 990.24m,
                            ProductName = "Ice Cream",
                            Status = 0,
                            Stock = (short)19,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 15,
                            CategoryId = 5,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(1995),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.28000000000000003,
                            ImagePath = "https://picsum.photos/640/480/?image=675",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("65a2cfed-26af-4940-b96d-c141933a13e7"),
                            Price = 913.37m,
                            ProductName = "Macchiato",
                            Status = 0,
                            Stock = (short)5,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 16,
                            CategoryId = 10,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(2005),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.13,
                            ImagePath = "https://picsum.photos/640/480/?image=215",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("b09b0574-d605-4a9b-8f72-76de8a017f1d"),
                            Price = 512.09m,
                            ProductName = "Ice Cream",
                            Status = 0,
                            Stock = (short)25,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 17,
                            CategoryId = 7,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(2013),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.20999999999999999,
                            ImagePath = "https://picsum.photos/640/480/?image=937",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("558176a5-307e-45ba-98be-395d0bf84492"),
                            Price = 931.47m,
                            ProductName = "Turkish Coffee",
                            Status = 0,
                            Stock = (short)11,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 18,
                            CategoryId = 2,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(2026),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.26000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=30",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("226c6a87-392f-4b22-8f82-95d33e25961a"),
                            Price = 519.13m,
                            ProductName = "Panna Cotta",
                            Status = 0,
                            Stock = (short)28,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 19,
                            CategoryId = 9,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(2035),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.40999999999999998,
                            ImagePath = "https://picsum.photos/640/480/?image=978",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("3136c887-837d-4011-9f0c-71e0a9c02d80"),
                            Price = 50.09m,
                            ProductName = "Fruit Salad",
                            Status = 0,
                            Stock = (short)65,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 20,
                            CategoryId = 3,
                            CreatedComputerName = "LAPTOP-7RVI861P",
                            CreatedDate = new DateTime(2024, 7, 26, 14, 43, 25, 945, DateTimeKind.Local).AddTicks(2044),
                            CreatedIpAddress = 2,
                            DataSize = 0,
                            Discount = 0.040000000000000001,
                            ImagePath = "https://picsum.photos/640/480/?image=874",
                            IsActive = true,
                            IsDiscontinued = false,
                            MasterId = new Guid("17ea1530-3aab-4c37-b98f-ac88ce6430e0"),
                            Price = 274.85m,
                            ProductName = "Brownie",
                            Status = 0,
                            Stock = (short)88,
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Shipment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedIpAddress")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedComputerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("OrderId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Order", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.HasOne("HotCatCafe.Model.Entities.Discount", null)
                        .WithMany("Orders")
                        .HasForeignKey("DiscountID");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.OrderDetail", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Review", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", "AppUser")
                        .WithMany("Reviews")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Shipment", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HotCatCafe.Model.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Discount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("HotCatCafe.Model.Entities.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
